* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: "Atkinson Hyperlegible", "Tahoma", sans-serif;
  background-color: #000;
  font-size: 1.25rem;
}

body, html {
  scroll-behavior: smooth;
}

.d-none {
  display: none !important;
}

input,
button {
  font-family: inherit;
  font-size: inherit;
}

/* Keyboard */

.keyboard {
  display: grid;
  justify-content: center;
  grid-template-columns: repeat(auto-fill, minmax(28px, 1fr));
  grid-auto-rows: 28px;
  gap: 12px;
  padding: 1em;
  max-width: 28em;
  margin: 1em auto 2em;
}

.key {
  all: unset;
  background-color: #111;
  color: #fff;
  padding: 0.5em;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: all 0.2s ease-out;
  border-radius: 4px;
  font-size: 1rem;
  color: transparent !important;
}

.keyAnim {
  background-color: orange !important;
  transform: translateY(40px);
  border-radius: 0;
}

.key.n {
  background-color: snow;
  color: #222;
}
.key.s {
  background-color: #222;
  color: snow;
}

/* Arp */
#units {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin-bottom: 2em;
}

.arpUnit {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1em;
  width: max-content;
  margin: 1em;
  border: 1px dashed #fff;
  padding: 1em;
}

.tempoAndRandom {
  display: flex;
  justify-content: space-between;
  align-self: stretch;
  gap: 1em;
}

.inputTempo {
  all: unset;
  padding: 0.5em;
  background-color: #fff;
  height: 1em;
  text-align: center;
  flex: 1;
}

.scale {
  align-self: stretch;
  display: flex;
  position: relative;
}

.scaleSelect {
  all: unset;
  position: relative;
  background-color: #fff;
  padding: 0.25em 0.5em;
  flex: 1;
  font-size: 1rem;
}

.scale::after {
  position: absolute;
  content: "";
  background-image: url(/img/selectdown.svg);
  right: 0.5em;
  height: 100%;
  width: 1em;
  background-position: 50%;
  /* background-repeat: no-repeat; */
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0.5;
  transition: all 0.2s;
}

.scale:hover::after {
  background-position-y: 400%;
}

.pattern {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 0.5em;
}

.inputNote {
  all: unset;
  height: 1em;
  width: 2em;
  padding: 0.5em;
  background-color: #fff;
  text-align: center;
  position: relative;
}

.inputNote:placeholder-shown {
  background-color: #111;
  caret-color: #fff;
}

.inputNote:placeholder-shown + .inputNote {
  display: none;
}

.inputNote:focus ~ .notesMenu {
  display: block !important;
}

.notesMenu {
  position: absolute;
  z-index: 10;
  background-color: #111;
  color: #fff;
  bottom: calc(100%);
  left: -1px;
  right: -1px;
  padding: 0.5em;
  border: 1px dashed #fff;
  border-bottom: 1px solid #222;
  display: none;
  box-shadow: 0 -50px 50px #000d;
}

.notesMenu:hover {
  display: block;
}

.notesMenu ul {
  display: flex;
  list-style: none;
  justify-content: space-between;
  font-size: 1rem;
  font-weight: light;
}

.notesMenu li {
  border: 1px solid #fff;
  background-color: #0005;
  flex: 1;
  display: flex;
  padding: 0.5em 0.25em;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: all 0.2s;
}

.notesMenu li.active {
  background-color: rgb(174, 209, 245);
  color: #000;
}

.randomOrStraight {
  display: flex;
  gap: 0.5em;
}

.inputRandom {
  all: unset;
  height: 1em;
  width: 1em;
  padding: 0.5em;
  background-color: #fff;
  background-size: 100%;
  background-repeat: no-repeat;
}

.inputRandom:checked {
  background-color: rgb(174, 209, 245);
}

.inputRandom[value="true"] {
  background-image: url(/img/random.svg);
}

.inputRandom[value="false"] {
  background-image: url(/img/straight.svg);
}

#buttons {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin: auto;
}

#buttons button {
  all: unset;
  height: 1em;
  width: 2em;
  padding: 0.5em;
  background-color: #fff;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0.5em;
  cursor: pointer;
  transition: background 0.2s;
  background-size: 50%;
  background-position: 50%;
  background-repeat: no-repeat;
}

#buttons #addUnitBtn {
  background-image: url(/img/add.svg);
}
#buttons #saveSeqBtn {
  background-image: url(/img/save.svg);
  opacity: .1;
  pointer-events: none;
}
#buttons #stopBtn {
  background-image: url(/img/stop.svg);
}
#buttons #submitBtn {
  background-image: url(/img/play.svg);
}

#buttons button:active {
  background-color: rgb(174, 209, 245);
}

input {
  outline: 4px solid transparent;
}

input:focus,
button:focus {
  outline: 2px solid rgb(174, 209, 245) !important;
  outline-offset: 2px !important;
}

.dangerousButtons {
  margin-top: auto;
  display: flex;
  gap: 1em;
}

.dangerousButtons button {
  all: unset;
  cursor: pointer;
  color: #fff7;
  font-size: 1rem;
  padding: 0.25em 0.5em;
}

.dangerousButtons button:hover,
.dangerousButtons button:focus {
  color: orangered;
}

#arp1 .removeUnitBtn {
  display: none;
}

/* Demos */
#demosArea {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  padding: .5em;
  margin: 0.5em auto 2em;
  background-color: #111;
  gap: 1em;
}

#demosTitle {
  color: #fff;
  font-size: 1.25rem;
  margin: auto;
  text-align: center;
}

#demosTitle span {
  font-weight: ligher;
  color: orange;
}

#demosArea button {
  all: unset;
  background-color: #fffa;
  padding: 0.25em 1.5em;
  transition: all 0.2s;
  cursor: pointer;
}

#demosArea button:hover,
#demosArea button:focus {
  background-color: #ffff;
}
